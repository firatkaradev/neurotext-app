import '../services/stats_service.dart';
import '../services/article_service.dart';

class Achievement {
  final String id;
  final String title;
  final String description;
  final String icon;
  final String category;
  final Function(Map<String, dynamic> userStats) isUnlocked;
  final int points;

  Achievement({
    required this.id,
    required this.title,
    required this.description,
    required this.icon,
    required this.category,
    required this.isUnlocked,
    required this.points,
  });
}

class AchievementsService {
  static List<Achievement> getAllAchievements() {
    return [
      // === OKUMA S√úRELERƒ∞ (Reading Time) ===
      Achievement(
        id: 'first_minute',
        title: 'ƒ∞lk Dakika',
        description: '1 dakika okudunuz',
        icon: '‚è±Ô∏è',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 1,
        points: 5,
      ),
      Achievement(
        id: 'five_minutes',
        title: 'Isƒ±nma Turu',
        description: '5 dakika okudunuz',
        icon: 'üî•',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 5,
        points: 10,
      ),
      Achievement(
        id: 'quarter_hour',
        title: '√áeyrek Saat',
        description: '15 dakika okudunuz',
        icon: '‚è∞',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 15,
        points: 15,
      ),
      Achievement(
        id: 'half_hour',
        title: 'Yarƒ±m Saat',
        description: '30 dakika okudunuz',
        icon: '‚è≥',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 30,
        points: 25,
      ),
      Achievement(
        id: 'one_hour',
        title: 'Bir Saat',
        description: '1 saat okudunuz',
        icon: 'üïê',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 60,
        points: 50,
      ),
      Achievement(
        id: 'two_hours',
        title: 'ƒ∞ki Saat',
        description: '2 saat okudunuz',
        icon: 'üïë',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 120,
        points: 75,
      ),
      Achievement(
        id: 'five_hours',
        title: 'Be≈ü Saat',
        description: '5 saat okudunuz',
        icon: 'üèÉ‚Äç‚ôÇÔ∏è',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 300,
        points: 100,
      ),
      Achievement(
        id: 'ten_hours',
        title: 'On Saat',
        description: '10 saat okudunuz',
        icon: 'üèÉ‚Äç‚ôÄÔ∏è',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 600,
        points: 150,
      ),
      Achievement(
        id: 'twenty_hours',
        title: 'Yirmi Saat',
        description: '20 saat okudunuz',
        icon: 'üåÖ',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 1200,
        points: 200,
      ),
      Achievement(
        id: 'fifty_hours',
        title: 'Elli Saat',
        description: '50 saat okudunuz',
        icon: 'üåÑ',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 3000,
        points: 400,
      ),
      Achievement(
        id: 'hundred_hours',
        title: 'Y√ºz Saat',
        description: '100 saat okudunuz',
        icon: 'üíØ',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 6000,
        points: 800,
      ),
      Achievement(
        id: 'two_hundred_hours',
        title: 'ƒ∞ki Y√ºz Saat',
        description: '200 saat okudunuz',
        icon: 'üóª',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 12000,
        points: 1500,
      ),
      Achievement(
        id: 'five_hundred_hours',
        title: 'Be≈ü Y√ºz Saat',
        description: '500 saat okudunuz',
        icon: 'üèÜ',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 30000,
        points: 3000,
      ),
      Achievement(
        id: 'thousand_hours',
        title: 'Bin Saat',
        description: '1000 saat okudunuz',
        icon: 'üëë',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 60000,
        points: 5000,
      ),
      Achievement(
        id: 'marathon_session',
        title: 'Maraton Oturumu',
        description: 'Tek seferde 4 saat okudunuz',
        icon: 'üèÉ',
        category: 'Okuma S√ºreleri',
        isUnlocked: (stats) => (stats['longestSession'] ?? 0) >= 240,
        points: 300,
      ),

      // === KELƒ∞ME SAYILARI (Word Count) ===
      Achievement(
        id: 'first_word',
        title: 'ƒ∞lk Kelime',
        description: 'ƒ∞lk kelimenizi okudunuz',
        icon: 'üìù',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 1,
        points: 5,
      ),
      Achievement(
        id: 'hundred_words',
        title: 'Y√ºz Kelime',
        description: '100 kelime okudunuz',
        icon: 'üìÑ',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 100,
        points: 10,
      ),
      Achievement(
        id: 'five_hundred_words',
        title: 'Be≈ü Y√ºz Kelime',
        description: '500 kelime okudunuz',
        icon: 'üìÉ',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 500,
        points: 20,
      ),
      Achievement(
        id: 'thousand_words',
        title: 'Bin Kelime',
        description: '1,000 kelime okudunuz',
        icon: 'üìë',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 1000,
        points: 50,
      ),
      Achievement(
        id: 'five_thousand_words',
        title: 'Be≈ü Bin Kelime',
        description: '5,000 kelime okudunuz',
        icon: 'üìö',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 5000,
        points: 100,
      ),
      Achievement(
        id: 'ten_thousand_words',
        title: 'On Bin Kelime',
        description: '10,000 kelime okudunuz',
        icon: 'üìñ',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 10000,
        points: 200,
      ),
      Achievement(
        id: 'twenty_five_thousand_words',
        title: 'Yirmi Be≈ü Bin Kelime',
        description: '25,000 kelime okudunuz',
        icon: 'üìó',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 25000,
        points: 350,
      ),
      Achievement(
        id: 'fifty_thousand_words',
        title: 'Elli Bin Kelime',
        description: '50,000 kelime okudunuz',
        icon: 'üìò',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 50000,
        points: 500,
      ),
      Achievement(
        id: 'hundred_thousand_words',
        title: 'Y√ºz Bin Kelime',
        description: '100,000 kelime okudunuz',
        icon: 'üìô',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 100000,
        points: 1000,
      ),
      Achievement(
        id: 'quarter_million_words',
        title: '√áeyrek Milyon Kelime',
        description: '250,000 kelime okudunuz',
        icon: 'üìì',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 250000,
        points: 2000,
      ),
      Achievement(
        id: 'half_million_words',
        title: 'Yarƒ±m Milyon Kelime',
        description: '500,000 kelime okudunuz',
        icon: 'üìî',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 500000,
        points: 3500,
      ),
      Achievement(
        id: 'million_words',
        title: 'Bir Milyon Kelime',
        description: '1,000,000 kelime okudunuz',
        icon: 'üíé',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalWords'] ?? 0) >= 1000000,
        points: 5000,
      ),
      Achievement(
        id: 'word_machine_daily',
        title: 'G√ºnl√ºk Kelime Makinesi',
        description: 'Bir g√ºnde 5,000 kelime okudunuz',
        icon: 'ü§ñ',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['dailyMaxWords'] ?? 0) >= 5000,
        points: 200,
      ),
      Achievement(
        id: 'word_beast_daily',
        title: 'G√ºnl√ºk Kelime Canavarƒ±',
        description: 'Bir g√ºnde 10,000 kelime okudunuz',
        icon: 'üëπ',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['dailyMaxWords'] ?? 0) >= 10000,
        points: 400,
      ),
      Achievement(
        id: 'speed_reader',
        title: 'Hƒ±zlƒ± Okuyucu',
        description: 'Dakikada 60+ kelime okudunuz',
        icon: '‚ö°',
        category: 'Kelime Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['avgWordsPerMinute'] ?? 0) >= 60,
        points: 150,
      ),

      // === S√úREKLƒ∞Lƒ∞K (Streaks) ===
      Achievement(
        id: 'first_day_streak',
        title: 'ƒ∞lk G√ºn',
        description: '1 g√ºn okudunuz',
        icon: 'üåÖ',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 1,
        points: 10,
      ),
      Achievement(
        id: 'three_day_streak',
        title: '√ú√ß G√ºn',
        description: '3 g√ºn art arda okudunuz',
        icon: 'üî•',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 3,
        points: 25,
      ),
      Achievement(
        id: 'week_streak',
        title: 'Bir Hafta',
        description: '7 g√ºn art arda okudunuz',
        icon: 'üìÖ',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 7,
        points: 75,
      ),
      Achievement(
        id: 'two_week_streak',
        title: 'ƒ∞ki Hafta',
        description: '14 g√ºn art arda okudunuz',
        icon: 'üìÜ',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 14,
        points: 150,
      ),
      Achievement(
        id: 'month_streak',
        title: 'Bir Ay',
        description: '30 g√ºn art arda okudunuz',
        icon: 'üóìÔ∏è',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 30,
        points: 300,
      ),
      Achievement(
        id: 'two_month_streak',
        title: 'ƒ∞ki Ay',
        description: '60 g√ºn art arda okudunuz',
        icon: 'üìã',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 60,
        points: 600,
      ),
      Achievement(
        id: 'three_month_streak',
        title: '√ú√ß Ay',
        description: '90 g√ºn art arda okudunuz',
        icon: 'üèÜ',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 90,
        points: 1000,
      ),
      Achievement(
        id: 'six_month_streak',
        title: 'Altƒ± Ay',
        description: '180 g√ºn art arda okudunuz',
        icon: 'üëë',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 180,
        points: 2000,
      ),
      Achievement(
        id: 'year_streak',
        title: 'Bir Yƒ±l',
        description: '365 g√ºn art arda okudunuz',
        icon: 'üéñÔ∏è',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['currentStreak'] ?? 0) >= 365,
        points: 5000,
      ),
      Achievement(
        id: 'perfect_week',
        title: 'M√ºkemmel Hafta',
        description: 'Bir hafta her g√ºn okudunuz',
        icon: '‚ú®',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['perfectWeeks'] ?? 0) >= 1,
        points: 100,
      ),
      Achievement(
        id: 'perfect_month',
        title: 'M√ºkemmel Ay',
        description: 'Bir ay her g√ºn okudunuz',
        icon: 'üåü',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['perfectMonths'] ?? 0) >= 1,
        points: 500,
      ),
      Achievement(
        id: 'habit_master',
        title: 'Alƒ±≈ükanlƒ±k Ustasƒ±',
        description: '50 g√ºn okudunuz',
        icon: 'üéØ',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['totalDays'] ?? 0) >= 50,
        points: 400,
      ),
      Achievement(
        id: 'dedication_master',
        title: 'Baƒülƒ±lƒ±k Ustasƒ±',
        description: '100 g√ºn okudunuz',
        icon: 'üèÖ',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['totalDays'] ?? 0) >= 100,
        points: 800,
      ),
      Achievement(
        id: 'lifetime_reader',
        title: 'Ya≈üam Boyu Okuyucu',
        description: '200 g√ºn okudunuz',
        icon: 'üë¥',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['totalDays'] ?? 0) >= 200,
        points: 1500,
      ),
      Achievement(
        id: 'immortal_reader',
        title: '√ñl√ºms√ºz Okuyucu',
        description: '365 g√ºn okudunuz',
        icon: '‚ôæÔ∏è',
        category: 'S√ºreklilik',
        isUnlocked: (stats) => (stats['totalDays'] ?? 0) >= 365,
        points: 3000,
      ),

      // === MAKALE SAYILARI (Article Count) ===
      Achievement(
        id: 'first_article',
        title: 'ƒ∞lk Makale',
        description: 'ƒ∞lk makalenizi okudunuz',
        icon: 'üì∞',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 1,
        points: 10,
      ),
      Achievement(
        id: 'five_articles',
        title: 'Be≈ü Makale',
        description: '5 makale okudunuz',
        icon: 'üìÑ',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 5,
        points: 25,
      ),
      Achievement(
        id: 'ten_articles',
        title: 'On Makale',
        description: '10 makale okudunuz',
        icon: 'üìã',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 10,
        points: 50,
      ),
      Achievement(
        id: 'twenty_five_articles',
        title: 'Yirmi Be≈ü Makale',
        description: '25 makale okudunuz',
        icon: 'üìä',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 25,
        points: 100,
      ),
      Achievement(
        id: 'fifty_articles',
        title: 'Elli Makale',
        description: '50 makale okudunuz',
        icon: 'üìà',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 50,
        points: 200,
      ),
      Achievement(
        id: 'hundred_articles',
        title: 'Y√ºz Makale',
        description: '100 makale okudunuz',
        icon: 'üíØ',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 100,
        points: 500,
      ),
      Achievement(
        id: 'two_hundred_articles',
        title: 'ƒ∞ki Y√ºz Makale',
        description: '200 makale okudunuz',
        icon: 'üìö',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 200,
        points: 750,
      ),
      Achievement(
        id: 'five_hundred_articles',
        title: 'Be≈ü Y√ºz Makale',
        description: '500 makale okudunuz',
        icon: 'üìñ',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 500,
        points: 1500,
      ),
      Achievement(
        id: 'thousand_articles',
        title: 'Bin Makale',
        description: '1000 makale okudunuz',
        icon: 'üèÜ',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['totalArticles'] ?? 0) >= 1000,
        points: 3000,
      ),
      Achievement(
        id: 'article_hunter',
        title: 'Makale Avcƒ±sƒ±',
        description: 'Bir g√ºnde 5 makale okudunuz',
        icon: 'üèπ',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['dailyMaxArticles'] ?? 0) >= 5,
        points: 100,
      ),
      Achievement(
        id: 'article_devourer',
        title: 'Makale Yutucusu',
        description: 'Bir g√ºnde 10 makale okudunuz',
        icon: 'üëπ',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['dailyMaxArticles'] ?? 0) >= 10,
        points: 250,
      ),
      Achievement(
        id: 'article_collector',
        title: 'Makale Koleksiyoncusu',
        description: '25 makale kaydettiniz',
        icon: 'üóÇÔ∏è',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['savedArticles'] ?? 0) >= 25,
        points: 200,
      ),
      Achievement(
        id: 'library_builder',
        title: 'K√ºt√ºphane Kurucusu',
        description: '50 makale kaydettiniz',
        icon: 'üèõÔ∏è',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['savedArticles'] ?? 0) >= 50,
        points: 400,
      ),
      Achievement(
        id: 'content_curator',
        title: 'ƒ∞√ßerik K√ºrat√∂r√º',
        description: '100 makale kaydettiniz',
        icon: 'üé®',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['savedArticles'] ?? 0) >= 100,
        points: 800,
      ),
      Achievement(
        id: 'master_librarian',
        title: 'Usta K√ºt√ºphaneci',
        description: '200 makale kaydettiniz',
        icon: 'üìö',
        category: 'Makale Sayƒ±larƒ±',
        isUnlocked: (stats) => (stats['savedArticles'] ?? 0) >= 200,
        points: 1500,
      ),

      // === G√úNL√úK BA≈ûARIMLAR (Daily Goals) ===
      Achievement(
        id: 'daily_reader',
        title: 'G√ºnl√ºk Okuyucu',
        description: 'G√ºnde 30 dakika okudunuz',
        icon: '‚òÄÔ∏è',
        category: 'G√ºnl√ºk Hedefler',
        isUnlocked: (stats) => (stats['dailyMaxMinutes'] ?? 0) >= 30,
        points: 50,
      ),
      Achievement(
        id: 'daily_devotee',
        title: 'G√ºnl√ºk Baƒülƒ±',
        description: 'G√ºnde 60 dakika okudunuz',
        icon: 'üåÖ',
        category: 'G√ºnl√ºk Hedefler',
        isUnlocked: (stats) => (stats['dailyMaxMinutes'] ?? 0) >= 60,
        points: 100,
      ),
      Achievement(
        id: 'daily_enthusiast',
        title: 'G√ºnl√ºk Tutkulu',
        description: 'G√ºnde 120 dakika okudunuz',
        icon: 'üåü',
        category: 'G√ºnl√ºk Hedefler',
        isUnlocked: (stats) => (stats['dailyMaxMinutes'] ?? 0) >= 120,
        points: 200,
      ),
      Achievement(
        id: 'daily_champion',
        title: 'G√ºnl√ºk ≈ûampiyon',
        description: 'G√ºnde 180 dakika okudunuz',
        icon: 'üèÜ',
        category: 'G√ºnl√ºk Hedefler',
        isUnlocked: (stats) => (stats['dailyMaxMinutes'] ?? 0) >= 180,
        points: 400,
      ),
      Achievement(
        id: 'daily_legend',
        title: 'G√ºnl√ºk Efsane',
        description: 'G√ºnde 240 dakika okudunuz',
        icon: 'üëë',
        category: 'G√ºnl√ºk Hedefler',
        isUnlocked: (stats) => (stats['dailyMaxMinutes'] ?? 0) >= 240,
        points: 800,
      ),

      // === EƒûLENCELƒ∞ BA≈ûARIMLAR (Fun Achievements) ===
      Achievement(
        id: 'early_bird',
        title: 'Erken Ku≈ü',
        description: 'Sabah erken okudunuz',
        icon: 'üê¶',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['morningReading'] ?? 0) >= 1,
        points: 50,
      ),
      Achievement(
        id: 'night_owl',
        title: 'Gece Ku≈üu',
        description: 'Gece ge√ß okudunuz',
        icon: 'ü¶â',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['nightReading'] ?? 0) >= 1,
        points: 50,
      ),
      Achievement(
        id: 'midnight_reader',
        title: 'Gece Yarƒ±sƒ± Okuyucu',
        description: 'Gece yarƒ±sƒ±nda okudunuz',
        icon: 'üåô',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['midnightReading'] ?? 0) >= 1,
        points: 100,
      ),
      Achievement(
        id: 'weekend_warrior',
        title: 'Hafta Sonu Sava≈ü√ßƒ±sƒ±',
        description: '5 hafta sonu okudunuz',
        icon: '‚öîÔ∏è',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['weekendReading'] ?? 0) >= 5,
        points: 150,
      ),
      Achievement(
        id: 'bookworm',
        title: 'Kitap Kurdu',
        description: '4 saat hi√ß durmadan okudunuz',
        icon: 'üêõ',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['longestSession'] ?? 0) >= 240,
        points: 200,
      ),
      Achievement(
        id: 'procrastinator',
        title: 'Erteleyici',
        description: 'Ge√ß saatlerde okudunuz',
        icon: 'üò¥',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['lateNightReading'] ?? 0) >= 1,
        points: 25,
      ),
      Achievement(
        id: 'multitasker',
        title: '√áoklu G√∂revci',
        description: 'Farklƒ± zamanlarda okudunuz',
        icon: 'ü§π',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['diverseReadingTimes'] ?? 0) >= 3,
        points: 75,
      ),
      Achievement(
        id: 'zen_reader',
        title: 'Zen Okuyucu',
        description: 'Sakin okuma yapƒ±yorsunuz',
        icon: 'üßò',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['slowReading'] ?? 0) >= 5,
        points: 100,
      ),
      Achievement(
        id: 'speed_demon',
        title: 'Hƒ±z ≈ûeytanƒ±',
        description: '√áok hƒ±zlƒ± okuyorsunuz',
        icon: 'üë∫',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['fastReading'] ?? 0) >= 5,
        points: 100,
      ),
      Achievement(
        id: 'consistent_reader',
        title: 'Tutarlƒ± Okuyucu',
        description: 'D√ºzenli okuma alƒ±≈ükanlƒ±ƒüƒ±nƒ±z var',
        icon: 'üìä',
        category: 'Eƒülenceli',
        isUnlocked: (stats) => (stats['consistencyRate'] ?? 0) >= 70,
        points: 300,
      ),

      // === BA≈ûARI≈ûLAR BA≈ûARIMI (Meta) ===
      Achievement(
        id: 'achievement_hunter',
        title: 'Ba≈üarƒ±m Avcƒ±sƒ±',
        description: '10 ba≈üarƒ±m kazandƒ±nƒ±z',
        icon: 'üéØ',
        category: 'Meta',
        isUnlocked: (stats) => (stats['unlockedAchievements'] ?? 0) >= 10,
        points: 100,
      ),
      Achievement(
        id: 'achievement_collector',
        title: 'Ba≈üarƒ±m Koleksiyoncusu',
        description: '25 ba≈üarƒ±m kazandƒ±nƒ±z',
        icon: 'üè∫',
        category: 'Meta',
        isUnlocked: (stats) => (stats['unlockedAchievements'] ?? 0) >= 25,
        points: 250,
      ),
      Achievement(
        id: 'achievement_master',
        title: 'Ba≈üarƒ±m Ustasƒ±',
        description: '50 ba≈üarƒ±m kazandƒ±nƒ±z',
        icon: 'üóø',
        category: 'Meta',
        isUnlocked: (stats) => (stats['unlockedAchievements'] ?? 0) >= 50,
        points: 500,
      ),
      Achievement(
        id: 'achievement_legend',
        title: 'Ba≈üarƒ±m Efsanesi',
        description: '75 ba≈üarƒ±m kazandƒ±nƒ±z',
        icon: 'üèõÔ∏è',
        category: 'Meta',
        isUnlocked: (stats) => (stats['unlockedAchievements'] ?? 0) >= 75,
        points: 1000,
      ),
      Achievement(
        id: 'completionist',
        title: 'Tamamlayƒ±cƒ±',
        description: 'T√ºm ba≈üarƒ±mlarƒ± kazandƒ±nƒ±z',
        icon: 'üíé',
        category: 'Meta',
        isUnlocked: (stats) => (stats['unlockedAchievements'] ?? 0) >= 80,
        points: 5000,
      ),

      // === √ñZEL BA≈ûARIMLAR (Special) ===
      Achievement(
        id: 'first_time_user',
        title: 'ƒ∞lk Kez Kullanƒ±cƒ±',
        description: 'Uygulamayƒ± ilk kez kullandƒ±nƒ±z',
        icon: 'üéâ',
        category: '√ñzel',
        isUnlocked: (stats) => (stats['totalMinutes'] ?? 0) >= 1,
        points: 10,
      ),
      Achievement(
        id: 'settings_explorer',
        title: 'Ayarlar Ka≈üifi',
        description: 'Ayarlarƒ± ke≈üfettiniz',
        icon: '‚öôÔ∏è',
        category: '√ñzel',
        isUnlocked: (stats) => (stats['settingsVisited'] ?? 0) >= 1,
        points: 25,
      ),
      Achievement(
        id: 'theme_switcher',
        title: 'Tema Deƒüi≈ütirici',
        description: 'Koyu/a√ßƒ±k tema deƒüi≈ütirdiniz',
        icon: 'üåó',
        category: '√ñzel',
        isUnlocked: (stats) => (stats['themeChanges'] ?? 0) >= 1,
        points: 30,
      ),
      Achievement(
        id: 'font_adjuster',
        title: 'Yazƒ± Tipi Ayarlayƒ±cƒ±',
        description: 'Yazƒ± boyutunu ayarladƒ±nƒ±z',
        icon: 'üî§',
        category: '√ñzel',
        isUnlocked: (stats) => (stats['fontSizeChanges'] ?? 0) >= 1,
        points: 25,
      ),
      Achievement(
        id: 'sharing_is_caring',
        title: 'Payla≈ümak G√ºzeldir',
        description: 'ƒ∞lk metninizi kaydettiniz',
        icon: 'ü§ù',
        category: '√ñzel',
        isUnlocked: (stats) => (stats['savedArticles'] ?? 0) >= 1,
        points: 50,
      ),
    ];
  }

  static List<Achievement> getUnlockedAchievements(
      Map<String, dynamic> userStats) {
    return getAllAchievements()
        .where((achievement) => achievement.isUnlocked(userStats))
        .toList();
  }

  static List<Achievement> getLockedAchievements(
      Map<String, dynamic> userStats) {
    return getAllAchievements()
        .where((achievement) => !achievement.isUnlocked(userStats))
        .toList();
  }

  static Map<String, List<Achievement>> getAchievementsByCategory() {
    final achievements = getAllAchievements();
    final Map<String, List<Achievement>> categorized = {};

    for (final achievement in achievements) {
      if (!categorized.containsKey(achievement.category)) {
        categorized[achievement.category] = [];
      }
      categorized[achievement.category]!.add(achievement);
    }

    return categorized;
  }

  static int getTotalPoints(List<Achievement> achievements) {
    return achievements.fold(0, (sum, achievement) => sum + achievement.points);
  }

  static int getUserLevel(int totalPoints) {
    return (totalPoints / 1000).floor() + 1;
  }

  static Future<Map<String, dynamic>> getUserStats() async {
    try {
      final weekStats = StatsService.getThisWeekStats();
      final monthStats = StatsService.getThisMonthStats();
      final totalStats = StatsService.getTotalStats();
      final streak = StatsService.getReadingStreak();

      // Get article count from ArticleService
      int savedArticleCount = 0;
      try {
        final articles = ArticleService.getAllArticles();
        savedArticleCount = articles.length;
      } catch (e) {
        savedArticleCount = 0;
      }

      // Calculate additional metrics
      final totalMinutes = totalStats['totalMinutes'] ?? 0;
      final totalWords = totalStats['totalWords'] ?? 0;
      final totalArticles = totalStats['totalArticles'] ?? 0;
      final totalDays = totalStats['totalDays'] ?? 0;
      final longestSession = totalStats['longestSession'] ?? 0;
      final avgDailyMinutes =
          totalDays > 0 ? (totalMinutes / totalDays).round() : 0;
      final avgWordsPerMinute =
          totalMinutes > 0 ? (totalWords / totalMinutes).round() : 0;

      // Calculate daily maximums from week/month data
      int dailyMaxMinutes = 0;
      int dailyMaxWords = 0;
      int dailyMaxArticles = 0;

      for (final stat in [...weekStats, ...monthStats]) {
        if (stat.readingTimeMinutes > dailyMaxMinutes) {
          dailyMaxMinutes = stat.readingTimeMinutes;
        }
        if (stat.wordsRead > dailyMaxWords) {
          dailyMaxWords = stat.wordsRead;
        }
        if (stat.articlesRead > dailyMaxArticles) {
          dailyMaxArticles = stat.articlesRead;
        }
      }

      // Calculate streaks and patterns
      int perfectWeeks = 0;
      int perfectMonths = 0;
      int weekendReading = 0;
      int morningReading = 0;
      int nightReading = 0;
      int midnightReading = 0;
      int lateNightReading = 0;

      // Simple pattern detection based on available data
      if (weekStats.length >= 7) perfectWeeks = 1;
      if (monthStats.length >= 30) perfectMonths = 1;
      weekendReading = weekStats
          .where(
              (s) => s.date.endsWith('Saturday') || s.date.endsWith('Sunday'))
          .length;

      // Time-based reading detection (placeholder - would need real timestamp data)
      final now = DateTime.now();
      final hour = now.hour;
      if (hour >= 6 && hour <= 10) morningReading = 1;
      if (hour >= 20 && hour <= 23) nightReading = 1;
      if (hour >= 0 && hour <= 2) midnightReading = 1;
      if (hour >= 22 || hour <= 4) lateNightReading = 1;

      final consistencyRate =
          totalDays > 0 ? (streak / totalDays * 100).round().clamp(0, 100) : 0;

      final userStats = {
        'totalMinutes': totalMinutes,
        'totalWords': totalWords,
        'totalArticles': totalArticles,
        'currentStreak': streak,
        'totalDays': totalDays,
        'longestSession': longestSession,
        'avgDailyMinutes': avgDailyMinutes,
        'avgWordsPerMinute': avgWordsPerMinute,
        'dailyMaxMinutes': dailyMaxMinutes,
        'dailyMaxWords': dailyMaxWords,
        'dailyMaxArticles': dailyMaxArticles,
        'savedArticles': savedArticleCount,
        'perfectWeeks': perfectWeeks,
        'perfectMonths': perfectMonths,
        'weekendReading': weekendReading,
        'morningReading': morningReading,
        'nightReading': nightReading,
        'midnightReading': midnightReading,
        'lateNightReading': lateNightReading,
        'consistencyRate': consistencyRate,
        'diverseReadingTimes': 3, // Placeholder
        'slowReading': avgWordsPerMinute > 0 && avgWordsPerMinute < 30 ? 1 : 0,
        'fastReading': avgWordsPerMinute > 80 ? 1 : 0,
        'unlockedAchievements': 0, // Will be calculated below
        'settingsVisited': 0, // Placeholder
        'themeChanges': 0, // Placeholder
        'fontSizeChanges': 0, // Placeholder
      };

      // Calculate unlocked achievements count
      final unlockedCount = getUnlockedAchievements(userStats).length;
      userStats['unlockedAchievements'] = unlockedCount;

      return userStats;
    } catch (e) {
      // Return safe defaults on error
      return {
        'totalMinutes': 0,
        'totalWords': 0,
        'totalArticles': 0,
        'currentStreak': 0,
        'totalDays': 0,
        'longestSession': 0,
        'avgDailyMinutes': 0,
        'avgWordsPerMinute': 0,
        'dailyMaxMinutes': 0,
        'dailyMaxWords': 0,
        'dailyMaxArticles': 0,
        'savedArticles': 0,
        'perfectWeeks': 0,
        'perfectMonths': 0,
        'weekendReading': 0,
        'morningReading': 0,
        'nightReading': 0,
        'midnightReading': 0,
        'lateNightReading': 0,
        'consistencyRate': 0,
        'diverseReadingTimes': 0,
        'slowReading': 0,
        'fastReading': 0,
        'unlockedAchievements': 0,
        'settingsVisited': 0,
        'themeChanges': 0,
        'fontSizeChanges': 0,
      };
    }
  }
}
